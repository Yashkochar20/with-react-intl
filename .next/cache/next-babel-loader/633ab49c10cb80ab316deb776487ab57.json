{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Document, { Head, Main, NextScript } from 'next/document'; // The document (which is SSR-only) needs to be customized to expose the locale\n// data for the user's locale for React Intl to work in the browser.\n\nexport default class IntlDocument extends Document {\n  static async getInitialProps(context) {\n    const props = await super.getInitialProps(context);\n    const {\n      req: {\n        locale,\n        localeDataScript\n      }\n    } = context;\n    return _objectSpread({}, props, {\n      locale,\n      localeDataScript\n    });\n  }\n\n  render() {\n    // Polyfill Intl API for older browsers\n    const polyfill = `https://cdn.polyfill.io/v3/polyfill.min.js?features=Intl.~locale.${this.props.locale}`;\n    return __jsx(\"html\", null, __jsx(Head, null), __jsx(\"body\", null, __jsx(Main, null), __jsx(\"script\", {\n      src: polyfill\n    }), __jsx(\"script\", {\n      dangerouslySetInnerHTML: {\n        __html: this.props.localeDataScript\n      }\n    }), __jsx(NextScript, null)));\n  }\n\n}","map":{"version":3,"sources":["/Users/yashkochar/Desktop/with-react-intl/pages/_document.js"],"names":["Document","Head","Main","NextScript","IntlDocument","getInitialProps","context","props","req","locale","localeDataScript","render","polyfill","__html"],"mappings":";;;AAAA,OAAOA,QAAP,IAAmBC,IAAnB,EAAyBC,IAAzB,EAA+BC,UAA/B,QAAiD,eAAjD,C,CAEA;AACA;;AACA,eAAe,MAAMC,YAAN,SAA2BJ,QAA3B,CAAoC;AACjD,eAAaK,eAAb,CAA8BC,OAA9B,EAAuC;AACrC,UAAMC,KAAK,GAAG,MAAM,MAAMF,eAAN,CAAsBC,OAAtB,CAApB;AACA,UAAM;AACJE,MAAAA,GAAG,EAAE;AAAEC,QAAAA,MAAF;AAAUC,QAAAA;AAAV;AADD,QAEFJ,OAFJ;AAGA,6BACKC,KADL;AAEEE,MAAAA,MAFF;AAGEC,MAAAA;AAHF;AAKD;;AAEDC,EAAAA,MAAM,GAAI;AACR;AACA,UAAMC,QAAQ,GAAI,oEAChB,KAAKL,KAAL,CAAWE,MACZ,EAFD;AAIA,WACE,oBACE,MAAC,IAAD,OADF,EAEE,oBACE,MAAC,IAAD,OADF,EAEE;AAAQ,MAAA,GAAG,EAAEG;AAAb,MAFF,EAGE;AACE,MAAA,uBAAuB,EAAE;AACvBC,QAAAA,MAAM,EAAE,KAAKN,KAAL,CAAWG;AADI;AAD3B,MAHF,EAQE,MAAC,UAAD,OARF,CAFF,CADF;AAeD;;AAlCgD","sourcesContent":["import Document, { Head, Main, NextScript } from 'next/document'\n\n// The document (which is SSR-only) needs to be customized to expose the locale\n// data for the user's locale for React Intl to work in the browser.\nexport default class IntlDocument extends Document {\n  static async getInitialProps (context) {\n    const props = await super.getInitialProps(context)\n    const {\n      req: { locale, localeDataScript }\n    } = context\n    return {\n      ...props,\n      locale,\n      localeDataScript\n    }\n  }\n\n  render () {\n    // Polyfill Intl API for older browsers\n    const polyfill = `https://cdn.polyfill.io/v3/polyfill.min.js?features=Intl.~locale.${\n      this.props.locale\n    }`\n\n    return (\n      <html>\n        <Head />\n        <body>\n          <Main />\n          <script src={polyfill} />\n          <script\n            dangerouslySetInnerHTML={{\n              __html: this.props.localeDataScript\n            }}\n          />\n          <NextScript />\n        </body>\n      </html>\n    )\n  }\n}\n"]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}
{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar __jsx = React.createElement;\nimport App from 'next/app';\nimport React from 'react';\nimport { IntlProvider } from 'react-intl';\n\nvar MyApp =\n/*#__PURE__*/\nfunction (_App) {\n  _inherits(MyApp, _App);\n\n  function MyApp() {\n    _classCallCheck(this, MyApp);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MyApp).apply(this, arguments));\n  }\n\n  _createClass(MyApp, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          Component = _this$props.Component,\n          pageProps = _this$props.pageProps,\n          locale = _this$props.locale,\n          messages = _this$props.messages;\n      return __jsx(IntlProvider, {\n        locale: locale,\n        messages: messages\n      }, __jsx(Component, pageProps));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(_ref) {\n        var Component, router, ctx, pageProps, req, _ref2, locale, messages;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                Component = _ref.Component, router = _ref.router, ctx = _ref.ctx;\n                pageProps = {};\n\n                if (!Component.getInitialProps) {\n                  _context.next = 6;\n                  break;\n                }\n\n                _context.next = 5;\n                return Component.getInitialProps(ctx);\n\n              case 5:\n                pageProps = _context.sent;\n\n              case 6:\n                // Get the `locale` and `messages` from the request object on the server.\n                // In the browser, use the same values that the server serialized.\n                req = ctx.req;\n                _ref2 = req || window.__NEXT_DATA__.props, locale = _ref2.locale, messages = _ref2.messages;\n                return _context.abrupt(\"return\", {\n                  pageProps: pageProps,\n                  locale: locale,\n                  messages: messages\n                });\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return MyApp;\n}(App);\n\nexport { MyApp as default };","map":{"version":3,"sources":["/Users/yashkochar/Desktop/with-react-intl/pages/_app.js"],"names":["App","React","IntlProvider","MyApp","props","Component","pageProps","locale","messages","router","ctx","getInitialProps","req","window","__NEXT_DATA__"],"mappings":";;;;;;;;AAAA,OAAOA,GAAP,MAAgB,UAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,YAA7B;;IAEqBC,K;;;;;;;;;;;;;6BAgBT;AAAA,wBAC2C,KAAKC,KADhD;AAAA,UACAC,SADA,eACAA,SADA;AAAA,UACWC,SADX,eACWA,SADX;AAAA,UACsBC,MADtB,eACsBA,MADtB;AAAA,UAC8BC,QAD9B,eAC8BA,QAD9B;AAGR,aACE,MAAC,YAAD;AAAc,QAAA,MAAM,EAAED,MAAtB;AAA8B,QAAA,QAAQ,EAAEC;AAAxC,SACE,MAAC,SAAD,EAAeF,SAAf,CADF,CADF;AAKD;;;;;;;;;;;;;AAvB+BD,gBAAAA,S,QAAAA,S,EAAWI,M,QAAAA,M,EAAQC,G,QAAAA,G;AAC7CJ,gBAAAA,S,GAAY,E;;qBAEZD,SAAS,CAACM,e;;;;;;uBACMN,SAAS,CAACM,eAAV,CAA0BD,GAA1B,C;;;AAAlBJ,gBAAAA,S;;;AAGF;AACA;AACQM,gBAAAA,G,GAAQF,G,CAARE,G;wBACqBA,GAAG,IAAIC,MAAM,CAACC,aAAP,CAAqBV,K,EAAjDG,M,SAAAA,M,EAAQC,Q,SAAAA,Q;iDAET;AAAEF,kBAAAA,SAAS,EAATA,SAAF;AAAaC,kBAAAA,MAAM,EAANA,MAAb;AAAqBC,kBAAAA,QAAQ,EAARA;AAArB,iB;;;;;;;;;;;;;;;;;;;EAbwBR,G;;SAAdG,K","sourcesContent":["import App from 'next/app'\nimport React from 'react'\nimport { IntlProvider } from 'react-intl'\n\nexport default class MyApp extends App {\n  static async getInitialProps ({ Component, router, ctx }) {\n    let pageProps = {}\n\n    if (Component.getInitialProps) {\n      pageProps = await Component.getInitialProps(ctx)\n    }\n\n    // Get the `locale` and `messages` from the request object on the server.\n    // In the browser, use the same values that the server serialized.\n    const { req } = ctx\n    const { locale, messages } = req || window.__NEXT_DATA__.props\n\n    return { pageProps, locale, messages }\n  }\n\n  render () {\n    const { Component, pageProps, locale, messages } = this.props\n\n    return (\n      <IntlProvider locale={locale} messages={messages}>\n        <Component {...pageProps} />\n      </IntlProvider>\n    )\n  }\n}\n"]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}